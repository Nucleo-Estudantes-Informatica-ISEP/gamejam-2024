<script type="module" is:inline>
  const CELL_SIZE = 20;
  const FRAME_RATE = 10;

  const snake = {
    body: [],
    dx: 1,
    dy: 0
  };

  const food = {
    x: Math.floor(Math.random() * 20),
    y: Math.floor(Math.random() * 20)
  };

  let gameOver = false;

  function drawSnake(ctx) {
    ctx.fillStyle = 'white';
    snake.body.forEach((segment) => {
      ctx.fillRect(segment.x * CELL_SIZE, segment.y * CELL_SIZE, CELL_SIZE, CELL_SIZE);
    });
  }

  function drawFood(ctx) {
    ctx.fillStyle = 'red';
    ctx.fillRect(food.x * CELL_SIZE, food.y * CELL_SIZE, CELL_SIZE, CELL_SIZE);
  }

  function draw(ctx) {
    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
    drawSnake(ctx);
    drawFood(ctx);
    if (gameOver) {
      ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';
      ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);
      ctx.fillStyle = 'white';
      ctx.font = '30px Arial';
      ctx.textAlign = 'center';
      ctx.fillText(
        'Game Over. Press Space to Restart',
        ctx.canvas.width / 2,
        ctx.canvas.height / 2
      );
    }
  }

  function moveSnake(ctx) {
    if (gameOver) return;
    const head = { x: snake.body[0].x + snake.dx, y: snake.body[0].y + snake.dy };
    if (snake.body.some((segment) => segment.x === head.x && segment.y === head.y)) {
      gameOver = true;
      return;
    }
    if (
      head.x < 0 ||
      head.x >= ctx.canvas.width / CELL_SIZE ||
      head.y < 0 ||
      head.y >= ctx.canvas.height / CELL_SIZE
    ) {
      gameOver = true;
      return;
    }

    snake.body.unshift(head);

    if (head.x === food.x && head.y === food.y) {
      generateNewFoodPosition(ctx);
    } else {
      snake.body.pop();
    }
  }
  function generateNewFoodPosition(ctx) {
    let newFoodX, newFoodY;
    do {
      newFoodX = Math.floor(Math.random() * (ctx.canvas.width / CELL_SIZE));
      newFoodY = Math.floor(Math.random() * (ctx.canvas.height / CELL_SIZE));
    } while (snake.body.some((segment) => segment.x === newFoodX && segment.y === newFoodY));

    food.x = newFoodX;
    food.y = newFoodY;
  }

  window.addEventListener('keydown', (event) => {
    event.preventDefault();
    if (gameOver && event.key === ' ') {
      resetGame();
      return;
    }
    switch (event.key) {
      case 'ArrowUp':
      case 'w':
      case 'k':
        if (snake.dy !== 1) {
          snake.dx = 0;
          snake.dy = -1;
        }
        break;
      case 'ArrowDown':
      case 's':
      case 'j':
        if (snake.dy !== -1) {
          snake.dx = 0;
          snake.dy = 1;
        }
        break;
      case 'ArrowLeft':
      case 'a':
      case 'h':
        if (snake.dx !== 1) {
          snake.dx = -1;
          snake.dy = 0;
        }
        break;
      case 'ArrowRight':
      case 'd':
      case 'l':
        if (snake.dx !== -1) {
          snake.dx = 1;
          snake.dy = 0;
        }
        break;
    }
  });

  window.addEventListener('touchstart', handleTouchStart, false);
  window.addEventListener('touchmove', handleTouchMove, false);

  let xDown = null;
  let yDown = null;

  function handleTouchStart(event) {
    const firstTouch = event.touches[0];
    xDown = firstTouch.clientX;
    yDown = firstTouch.clientY;
  }

  function handleTouchMove(event) {
    if (!xDown || !yDown) {
      return;
    }

    const xUp = event.touches[0].clientX;
    const yUp = event.touches[0].clientY;

    const xDiff = xDown - xUp;
    const yDiff = yDown - yUp;

    if (Math.abs(xDiff) > Math.abs(yDiff)) {
      if (xDiff > 0) {
        if (snake.dx !== 1) {
          snake.dx = -1;
          snake.dy = 0;
        }
      } else {
        if (snake.dx !== -1) {
          snake.dx = 1;
          snake.dy = 0;
        }
      }
    } else {
      if (yDiff > 0) {
        if (snake.dy !== 1) {
          snake.dx = 0;
          snake.dy = -1;
        }
      } else {
        if (snake.dy !== -1) {
          snake.dx = 0;
          snake.dy = 1;
        }
      }
    }
    xDown = null;
    yDown = null;
  }

  function resetGame() {
    snake.body = [{ x: 10, y: 10 }];
    snake.dx = 1;
    snake.dy = 0;
    food.x = Math.floor(Math.random() * 20);
    food.y = Math.floor(Math.random() * 20);
    gameOver = false;
  }

  async function main() {
    const canvas = document.createElement('canvas');
    const ctx = canvas.getContext('2d');
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    document.body.appendChild(canvas);

    snake.body.push({ x: 10, y: 10 });

    setInterval(() => {
      moveSnake(ctx);
      draw(ctx);
    }, 1000 / FRAME_RATE);
  }

  main();
</script>

<style is:inline>
  body {
    margin: 0;
    overflow: hidden;
    padding: 0;
    border: 0;
  }

  canvas {
    background: #000;
  }
</style>
